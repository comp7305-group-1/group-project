<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>COMP7305 Group 01 - Unravel the Mysteries by Spark Result</title>
  <script type="text/javascript" language="javascript">
var socket;
var status;

function ready() {
  status = 0;
  showStatus();

  var wsUri = 'ws://' + location.host + '/MysteriesResultWS?mt={{.MysteryText}}&mode={{.Mode}}&ne={{.NumExecutors}}&ec={{.ExecutorCores}}&dm={{.DriverMemory}}&mp={{.MinPartitions}}&bp={{.BooksPath}}';

  var stdout = document.getElementById('stdout');
  var stderr = document.getElementById('stderr');

  socket = new WebSocket(wsUri);
  socket.onopen = function(event) {
    console.log("socket.onopen");
    status = 1;
    showStatus();
  };
  socket.onmessage = function(event) {
    // console.log(event.data);
    var obj = JSON.parse(event.data);
    var stream = obj['stream'];
    var message = obj['message'];
    if (stream == 'stdout') {
      stdout.value += message + '\n';
      stdout.scrollTop = stdout.scrollHeight;
    } else if (stream == 'stderr') {
      stderr.value += message + '\n';
    }
  };
  socket.onclose = function(event) {
    console.log("socket.onclose");
    if (status == 1) {
      status = 2;
    }
    showStatus();
  };
  socket.onerror = function(event) {
    console.log('socket.onerror');
    status = 3;
    showStatus();
  };
}

function showStatus() {
  var status0 = document.getElementById('status0');
  var status1 = document.getElementById('status1');
  var status2 = document.getElementById('status2');
  var status3 = document.getElementById('status3');

  if (status == 0) {
    status0.classList.remove('hidden');
    status1.classList.add('hidden');
    status2.classList.add('hidden');
    status3.classList.add('hidden');
  } else if (status == 1) {
    status0.classList.add('hidden');
    status1.classList.remove('hidden');
    status2.classList.add('hidden');
    status3.classList.add('hidden');
  } else if (status == 2) {
    status0.classList.add('hidden');
    status1.classList.add('hidden');
    status2.classList.remove('hidden');
    status3.classList.add('hidden');
  } else if (status == 3) {
    status0.classList.add('hidden');
    status1.classList.add('hidden');
    status2.classList.add('hidden');
    status3.classList.remove('hidden');
  } else {
    console.log('else');
    console.log(status);
  }
}
  </script>
  <style type="text/css">
.red { color: red; }
.green { color: green; }
.blue { color: blue; }
.hidden { display: none; }
  </style>
</head>
<body>
  <script type="text/javascript" language="javascript">
document.addEventListener("DOMContentLoaded", ready);
  </script>
  <h1>COMP7305 Group 01 - Unravel the Mysteries by Spark Result</h1>
  <table>
    <tr>
      <th align="left">Mystery Text:</th>
      <td>{{.MysteryText}}</td>
    </tr>
    <tr>
      <th align="left">Use Cached Result:</th>
      <td>{{.IsUsedCachedResult}}</td>
    </tr>
    <tr>
      <th align="left">Executor Count:</th>
      <td>{{.NumExecutors}} (The <tt>--num-executors</tt> option in <tt>spark-submit</tt>)</td>
    </tr>
    <tr>
      <th align="left">Executor Cores:</th>
      <td>{{.ExecutorCores}} (The <tt>--executor-cores</tt> option in <tt>spark-submit</tt>)</td>
    </tr>
    <tr>
      <th align="left">Driver Memory:</th>
      <td>{{.DriverMemory}} (The <tt>--driver-memory</tt> option in <tt>spark-submit</tt>)</td>
    </tr>
    <tr>
      <th align="left">Partition Count:</th>
      <td>{{.MinPartitions}} (The <tt>minPartitions</tt> parameter in <tt>wholeTextFiles()</tt>)</td>
    </tr>
    <tr>
      <th align="left">Books Path:</th>
      <td><tt>{{.BooksPathURI}}</tt></td>
    </tr>
    <tr>
      <th align="left">Status:</th>
      <td>
        <span id="status0" class="green hidden">Waiting</span>
        <span id="status1" class="red hidden">Running</span>
        <span id="status2" class="blue hidden">Completed</span>
        <span id="status3" class="red hidden">Error</span>
      </td>
    </tr>
  </table><br>
  <form>
    <label for="stdout">Standard Output:</label><br>
    <textarea id="stdout" name="stdout" cols="200" rows="25" readonly="readonly" style="font-family: monospace"></textarea><br>
    <br>
    <label for="stderr">Standard Error:</label><br>
    <textarea id="stderr" name="stderr" cols="200" rows="25" readonly="readonly" style="font-family: monospace"></textarea><br>
    <!--
    <br>
    <label for="result">Result:</label><br>
    <input type="text" id="result" name="result" size="80" readonly="readonly" style="font-family: monospace">
    -->
  </form><br>
  <a href="/Mysteries">Go back to Unravel the Mysteries</a>
</body>
</html>
